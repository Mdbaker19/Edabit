I will be posting my code as i work through edabit
Create a function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.
function nextEdge(side1, side2) {
	return ((side1 + side2)-1);
}
You are given 2 out of 3 angles in a triangle, in degrees.

Write a function that classifies the missing angle as either "acute", "right", or "obtuse" based on its degrees.
function missingAngle(angle1, angle2) {
	var angle3 = (180-(angle1 + angle2));
	if(angle3 > 90) {
		return "obtuse";
	} else if (angle3 == 90) {
		return "right";
	} else return "acute";
}
Create a function that takes a number as an argument and returns the square root of that number cubed.
function cubeSquareRoot(num) {
	var n = Math.sqrt(num);
	return (n * n * n);
}
Create a function that takes an array of numbers and returns only the even values.
function isEven(x) {
	return(x % 2 == 0);
}
function noOdds(arr) {
	var newArray = [];
	for(var i = 0; i < arr.length; i++){
		var input = arr[i];
		if(isEven(input) == true){
			newArray.push(input);
		} else continue;
	} return newArray;
}
Create a function that takes an array of numbers and return the first and last elements as a new array.
function firstLast(arr) {
	return [arr[0], arr[arr.length-1]];
}
Create a function that takes a string and returns the word count. The string will be a sentence.
function countWords(str) {
	return str.split(" ").length;
}
Create a function that takes a number (from 1 - 60) and returns a corresponding string of hyphens
function Go(num) {
	return "-".repeat(num);
}
A number added with its additive inverse equals zero. Create a function that returns an array of additive inverses.
function additiveInverse(arr) {
	return arr.map((element) => element *= (-1));
}
Write a function that searches an array of names (unsorted) for the name "Bob" and returns the location in the array. If Bob is not in the array, return -1.
function findBob(names) {
	if(names.indexOf("Bob") != (-1)){
		return names.indexOf("Bob");
	} else return (-1);
}
Create a function that takes an array and returns the difference between the biggest and smallest numbers.
function diffMaxMin(arr) {
	var mx = Math.max(...arr);
	var mn = Math.min(...arr);
	return (mx - mn);
}
Create a function that converts a date formatted as MM/DD/YYYY to YYYYDDMM.
function formatDate(date) {
	var newArray = date.split("/");
	var answer = newArray.reverse();
	return answer.join("");
}
Create a function that takes a string and returns a string with its letters in alphabetical order.
function AlphabetSoup(str) {
	return str.split("").sort().join("");
}
Create a function that takes an array of strings and returns the words that are exactly four letters
function isFourLetters(arr) {
	return (arr.filter(word => (word.length == 4)));
}

Create a function that removes the first and last characters from a string.

function removeFirstLast(str) {
	if(str.length > 2){
		var answer = str.slice(1,-1);
		return answer;
	} return str;
}

Create a function to calculate the determinant of a 2 * 2 matrix. The determinant of the following matrix is: ad - bc

function calcDeterminant(matrix) {
	var newArray = matrix.flat();
	return ((newArray[0] * newArray[3]) - (newArray[1] * newArray[2]));
}
Take a list of names.
Add "Hello" to every name.
Make one big string with all greetings.
The solution should be one string with a comma in between every "Hello (Name)".

function greetPeople(names) {
	var withHello = (names.map((element) => "Hello " + element));
	return withHello.join(", ");


}

Given an array of values return the standard deviation rounded to the nearest hundredth.

function addArray(a, b){
	return a + b;
}

function standardDeviation(arr) {
	var lengthOfArr = arr.length;
	var mean = (arr.reduce(addArray)) / (lengthOfArr);
	var diff = (arr.map((element) => Math.abs((element) - mean)));
	var roundedDiffAbs = (diff.map((element) => Math.round(element)));
	var squareddRDA = (roundedDiffAbs.map((element) => element * element));
	var reducedSRDA = (squareddRDA.reduce(addArray));
	var dividedRSRDA = reducedSRDA / lengthOfArr;
	var answer = Math.sqrt(dividedRSRDA);
	var roundedAnswerStr = answer.toFixed(2);
	return parseFloat(roundedAnswerStr);
}

Given a number, return the difference between the maximum and minimum numbers that can be formed when the digits are rearranged.

 function rearrangedDifference(num) {
 	var newArrayMax = num.toString().split("").sort().reverse().join("");
 	var newArrayMin = num.toString().split("").sort().join("");
 	var highest = parseFloat(newArrayMax);
 	var lowest = parseFloat(newArrayMin);
 	return highest - lowest;
 }

Create a function that determines whether a shopping order is eligible for free shipping. An order is eligible for free shipping if the total cost of items purchased exceeds $50.00.

function freeShipping(order) {
	function added(x, y) {
		return x + y;
	}
	let total = Object.values(order).reduce(added);
	return total > 50;
}

